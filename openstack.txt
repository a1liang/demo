http://docs.openstack.org/mitaka/zh_CN/install-guide-rdo/

yum install -y centos-release-openstack-mitaka
yum install -y python-openstackclient
yum install -y openstack-selinux

时间同步
yum install chrony -y
systemctl enable chronyd.service
systemctl start chronyd.service
chronyc sources
date

node1：
yum install -y mariadb mariadb-server python2-PyMySQL
yum install -y rabbitmq-server
yum install -y openstack-keystone httpd mod_wsgi memcached python-memcached
yum install -y openstack-glance

yum install -y openstack-nova-api openstack-nova-cert \
openstack-nova-conductor openstack-nova-console \
openstack-nova-novncproxy openstack-nova-scheduler

yum install -y openstack-neutron openstack-neutron-ml2 \
openstack-neutron-linuxbridge ebtables

node2：
yum install -y openstack-nova-compute sysfsutils
yum install -y openstack-neutron openstack-neutron-linuxbridge ebtables

修改数据库配置文件
[root@linux-node1 ~]# cat /etc/my.cnf.d/openstack.cnf
[mysqld]
bind-address = 192.168.56.11
default-storage-engine = innodb
innodb_file_per_table
max_connections = 4096
collation-server = utf8_general_ci
character-set-server = utf8
启动数据库
systemctl enable mariadb.service
systemctl start mariadb.service
mysql_secure_installation

登录mysql；创建数据库并授权
create database keystone;
grant all on keystone.* to 'keystone'@'localhost' identified by 'keystone';
grant all on keystone.* to 'keystone'@'%' identified by 'keystone';
create database glance;
grant all on glance.* to 'glance'@'localhost' identified by 'glance';
grant all on glance.* to 'glance'@'%' identified by 'glance';
create database nova;
grant all on nova.* to 'nova'@'localhost' identified by 'nova';
grant all on nova.* to 'nova'@'%' identified by 'nova';
create database nova_api;
grant all on nova_api.* to 'nova'@'localhost' identified by 'nova';
grant all on nova_api.* to 'nova'@'%' identified by 'nova';
create database neutron;
grant all on neutron.* to 'neutron'@'localhost' identified by 'neutron';
grant all on neutron.* to 'neutron'@'%' identified by 'neutron';

启动并配置rabbitmq：
systemctl enable rabbitmq-server.service
systemctl start rabbitmq-server.service
rabbitmqctl add_user openstack openstack
rabbitmqctl set_permissions openstack ".*" ".*" ".*"
rabbitmq-plugins enable rabbitmq_management
netstat -lntup


[root@linux-node1 ~]# openssl rand -hex 10
04cf15593e68bdfc0f44

vi /etc/keystone/keystone.conf
增加如下内容
[DEFAULT]
admin_token = 04cf15593e68bdfc0f44
[database]
connection = mysql+pymysql://keystone:keystone@192.168.56.11/keystone
[memcache]
servers = 192.168.56.11:11211
[token]
provider = fernet
driver = memcache

su -s /bin/sh -c "keystone-manage db_sync" keystone
mysql -h 192.168.56.11 -ukeystone -pkeystone -e "use keystone;show tables;"
keystone-manage fernet_setup --keystone-user keystone --keystone-group keystone

systemctl enable memcached
systemctl start memcached

vi /etc/httpd/conf/httpd.conf
修改为
95： ServerName 192.168.56.11:80

vi /etc/httpd/conf.d/wsgi-keystone.conf
内容如下
Listen 5000
Listen 35357

<VirtualHost *:5000>
    WSGIDaemonProcess keystone-public processes=5 threads=1 user=keystone group=keystone display-name=%{GROUP}
    WSGIProcessGroup keystone-public
    WSGIScriptAlias / /usr/bin/keystone-wsgi-public
    WSGIApplicationGroup %{GLOBAL}
    WSGIPassAuthorization On
    ErrorLogFormat "%{cu}t %M"
    ErrorLog /var/log/httpd/keystone-error.log
    CustomLog /var/log/httpd/keystone-access.log combined

    <Directory /usr/bin>
        Require all granted
    </Directory>
</VirtualHost>

<VirtualHost *:35357>
    WSGIDaemonProcess keystone-admin processes=5 threads=1 user=keystone group=keystone display-name=%{GROUP}
    WSGIProcessGroup keystone-admin
    WSGIScriptAlias / /usr/bin/keystone-wsgi-admin
    WSGIApplicationGroup %{GLOBAL}
    WSGIPassAuthorization On
    ErrorLogFormat "%{cu}t %M"
    ErrorLog /var/log/httpd/keystone-error.log
    CustomLog /var/log/httpd/keystone-access.log combined

    <Directory /usr/bin>
        Require all granted
    </Directory>
</VirtualHost>


systemctl enable httpd.service
systemctl start httpd.service


export OS_TOKEN=04cf15593e68bdfc0f44
export OS_URL=http://192.168.56.11:35357/v3
export OS_IDENTITY_API_VERSION=3

openstack domain create --description "Default Domain" default
openstack project create --domain default --description "Admin Project" admin
openstack user create --domain default   --password-prompt admin
openstack role create admin
openstack role add --project admin --user admin admin
把admin用户，添加到admin项目，并授权admin的角色
openstack project create --domain default   --description "Demo Project" demo
openstack user create --domain default   --password-prompt demo
openstack role create user
openstack role add --project demo --user demo user

openstack project create --domain default --description "Service Project" service
openstack user create --domain default --password-prompt glance
openstack role add --project service --user glance admin
openstack user create --domain default --password-prompt nova
openstack role add --project service --user nova admin
openstack user create --domain default --password-prompt neutron
openstack role add --project service --user neutron admin

openstack service create --name keystone --description "OpenStack Identity" identity
openstack endpoint create --region RegionOne  identity public http://192.168.56.11:5000/v3
openstack endpoint create --region RegionOne  identity internal http://192.168.56.11:5000/v3
openstack endpoint create --region RegionOne  identity admin http://192.168.56.11:35357/v3

unset OS_TOKEN OS_URL

openstack --os-auth-url http://192.168.56.11:35357/v3 \
--os-project-domain-name default --os-user-domain-name default \
--os-project-name admin --os-username admin token issue

openstack --os-auth-url http://192.168.56.11:5000/v3 \
--os-project-domain-name default --os-user-domain-name default \
--os-project-name demo --os-username demo token issue

vi admin-openstack.sh
export OS_PROJECT_DOMAIN_NAME=default
export OS_USER_DOMAIN_NAME=default
export OS_PROJECT_NAME=admin
export OS_USERNAME=admin
export OS_PASSWORD=admin
export OS_AUTH_URL=http://192.168.56.11:35357/v3
export OS_IDENTITY_API_VERSION=3
export OS_IMAGE_API_VERSION=2

vi demo-openstack.sh
export OS_PROJECT_DOMAIN_NAME=default
export OS_USER_DOMAIN_NAME=default
export OS_PROJECT_NAME=demo
export OS_USERNAME=demo
export OS_PASSWORD=demo
export OS_AUTH_URL=http://192.168.56.11:5000/v3
export OS_IDENTITY_API_VERSION=3
export OS_IMAGE_API_VERSION=2

测试admin
source admin-openstack.sh
openstack token issue

测试demo
source demo-openstack.sh
openstack token issue

glance：部署
vi /etc/glance/glance-api.conf
[database]
connection = mysql+pymysql://glance:glance@192.168.56.11/glance

[glance_store]
stores = file,http
default_store = file
filesystem_store_datadir = /var/lib/glance/images

[keystone_authtoken]
auth_uri = http://192.168.56.11:5000
auth_url = http://192.168.56.11:35357
memcached_servers = 192.168.56.11:11211
auth_type = password
project_domain_name = default
user_domain_name = default
project_name = service
username = glance
password = glance

[paste_deploy]
flavor = keystone

vi /etc/glance/glance-registry.conf 
[database]
connection = mysql+pymysql://glance:glance@192.168.56.11/glance

[keystone_authtoken]
auth_uri = http://192.168.56.11:5000
auth_url = http://192.168.56.11:35357
memcached_servers = 192.168.56.11:11211
auth_type = password
project_domain_name = default
user_domain_name = default
project_name = service
username = glance
password = glance

[paste_deploy]
flavor = keystone

su -s /bin/sh -c "glance-manage db_sync" glance
mysql -h 192.168.56.11 -uglance -pglance -e "use glance;show tables;"

systemctl enable openstack-glance-api.service \
  openstack-glance-registry.service
systemctl start openstack-glance-api.service \
  openstack-glance-registry.service

source admin-openstack.sh
openstack service create --name glance   --description "OpenStack Image" image
openstack endpoint create --region RegionOne   image public http://192.168.56.11:9292
openstack endpoint create --region RegionOne   image internal http://192.168.56.11:9292
openstack endpoint create --region RegionOne   image admin http://192.168.56.11:9292

上传镜像cirros-0.3.4-x86_64-disk.img

source admin-openstack.sh

openstack image create "cirros" \
--file cirros-0.3.4-x86_64-disk.img \
--disk-format qcow2 --container-format bare \
--public
验证：
openstack image list

nova：
管理节点
openstack service create --name nova   --description "OpenStack Compute" compute
openstack endpoint create --region RegionOne   compute public http://192.168.56.11:8774/v2.1/%\(tenant_id\)s
openstack endpoint create --region RegionOne   compute admin http://192.168.56.11:8774/v2.1/%\(tenant_id\)s
openstack endpoint create --region RegionOne   compute internal http://192.168.56.11:8774/v2.1/%\(tenant_id\)s

vi /etc/nova/nova.conf
[DEFAULT]
enabled_apis=osapi_compute,metadata
auth_strategy=keystone
firewall_driver=nova.virt.firewall.NoopFirewallDriver
use_neutron=true
rpc_backend=rabbit
[api_database]
connection=mysql+pymysql://nova:nova@192.168.56.11/nova_api
[database]
connection=mysql+pymysql://nova:nova@192.168.56.11/nova
[glance]
api_servers=http://192.168.56.11:9292
[keystone_authtoken]
auth_uri = http://192.168.56.11:5000
auth_url = http://192.168.56.11:35357
memcached_servers = 192.168.56.11:11211
auth_type = password
project_domain_name = default
user_domain_name = default
project_name = service
username = nova
password = nova
[neutron]
url = http://192.168.56.11:9696
auth_url = http://192.168.56.11:35357
auth_type = password
project_domain_name = default
user_domain_name = default
region_name = RegionOne
project_name = service
username = neutron
password = neutron
service_metadata_proxy=true
metadata_proxy_shared_secret = oldboy
[oslo_concurrency]
lock_path=/var/lib/nova/tmp
[oslo_messaging_rabbit]
rabbit_host=192.168.56.11
rabbit_port=5672
rabbit_userid=openstack
rabbit_password=openstack
[vnc]
vncserver_listen=192.168.56.11
vncserver_proxyclient_address=192.168.56.11

su -s /bin/sh -c "nova-manage api_db sync" nova
su -s /bin/sh -c "nova-manage db sync" nova
mysql -h 192.168.56.11 -unova -pnova -e "use nova;show tables;"
mysql -h 192.168.56.11 -unova -pnova -e "use nova_api;show tables;"

systemctl enable openstack-nova-api.service \
openstack-nova-consoleauth.service openstack-nova-scheduler.service \
openstack-nova-conductor.service openstack-nova-novncproxy.service

systemctl start openstack-nova-api.service \
openstack-nova-consoleauth.service openstack-nova-scheduler.service \
openstack-nova-conductor.service openstack-nova-novncproxy.service

计算节点
[root@linux-node2 opt]# grep "^[a-Z\[]" /etc/nova/nova.conf
[DEFAULT]
enabled_apis=osapi_compute,metadata
auth_strategy=keystone
firewall_driver=nova.virt.firewall.NoopFirewallDriver
use_neutron=true
rpc_backend=rabbit
[glance]
api_servers=http://192.168.56.11:9292
[keystone_authtoken]
auth_uri = http://192.168.56.11:5000
auth_url = http://192.168.56.11:35357
memcached_servers = 192.168.56.11:11211
auth_type = password
project_domain_name = default
user_domain_name = default
project_name = service
username = nova
password = nova
[libvirt]
virt_type=kvm
[neutron]
url = http://192.168.56.11:9696
auth_url = http://192.168.56.11:35357
auth_type = password
project_domain_name = default
user_domain_name = default
region_name = RegionOne
project_name = service
username = neutron
password = neutron
[oslo_concurrency]
lock_path=/var/lib/nova/tmp
[oslo_messaging_rabbit]
rabbit_host=192.168.56.11
rabbit_port=5672
rabbit_userid=openstack
rabbit_password=openstack
[vnc]
enabled=true
vncserver_listen=0.0.0.0
vncserver_proxyclient_address=192.168.56.12
novncproxy_base_url=http://192.168.56.11:6080/vnc_auto.html

systemctl enable libvirtd openstack-nova-compute
systemctl start libvirtd openstack-nova-compute

管理节点，测试
openstack host list

neutron：
管理节点
vi /etc/neutron/neutron.conf
[DEFAULT]
auth_strategy = keystone
core_plugin = ml2
service_plugins =
notify_nova_on_port_status_changes = true
notify_nova_on_port_data_changes = true
rpc_backend = rabbit
[database]
connection = mysql+pymysql://neutron:neutron@192.168.56.11/neutron
[keystone_authtoken]
auth_uri = http://192.168.56.11:5000
auth_url = http://192.168.56.11:35357
memcached_servers = 192.168.56.11:11211
auth_type = password
project_domain_name = default
user_domain_name = default
project_name = service
username = neutron
password = neutron
[nova]
auth_url = http://192.168.56.11:35357
auth_type = password
project_domain_name = default
user_domain_name = default
region_name = RegionOne
project_name = service
username = nova
password = nova
[oslo_concurrency]
lock_path = /var/lib/neutron/tmp
[oslo_messaging_rabbit]
rabbit_host = 192.168.56.11
rabbit_userid = openstack
rabbit_password = openstack

vi /etc/neutron/plugins/ml2/ml2_conf.ini
[ml2]
type_drivers = flat,vlan,gre,vxlan,geneve
tenant_network_types = 
mechanism_drivers = linuxbridge,openvswitch
extension_drivers = port_security
[ml2_type_flat]
flat_networks = public
[securitygroup]
enable_ipset = true

vi /etc/neutron/plugins/ml2/linuxbridge_agent.ini 
[linux_bridge]
physical_interface_mappings = public:eth0
[securitygroup]
firewall_driver = neutron.agent.linux.iptables_firewall.IptablesFirewallDriver
enable_security_group = true
[vxlan]
enable_vxlan = false

vi /etc/neutron/dhcp_agent.ini
[DEFAULT]
interface_driver = neutron.agent.linux.interface.BridgeInterfaceDriver
dhcp_driver = neutron.agent.linux.dhcp.Dnsmasq
enable_isolated_metadata = true

vi /etc/neutron/metadata_agent.ini
[DEFAULT]
nova_metadata_ip = 192.168.56.11
metadata_proxy_shared_secret = oldboy

ln -s /etc/neutron/plugins/ml2/ml2_conf.ini /etc/neutron/plugin.ini

su -s /bin/sh -c "neutron-db-manage --config-file /etc/neutron/neutron.conf \
--config-file /etc/neutron/plugins/ml2/ml2_conf.ini upgrade head" neutron

mysql -h 192.168.56.11 -uneutron -pneutron -e "use neutron;show tables;"

systemctl enable neutron-server.service \
neutron-linuxbridge-agent.service neutron-dhcp-agent.service \
neutron-metadata-agent.service

systemctl start neutron-server.service \
neutron-linuxbridge-agent.service neutron-dhcp-agent.service \
neutron-metadata-agent.service

openstack service create --name neutron   --description "OpenStack Networking" network
openstack endpoint create --region RegionOne   network public http://192.168.56.11:9696
openstack endpoint create --region RegionOne   network admin http://192.168.56.11:9696
openstack endpoint create --region RegionOne   network internal http://192.168.56.11:9696

source admin-openstack.sh 
neutron agent-list

scp /etc/neutron/plugins/ml2/linuxbridge_agent.ini root@192.168.56.12:/etc/neutron/plugins/ml2/

计算节点
vi /etc/neutron/neutron.conf
[root@linux-node2 ~]# grep "^[a-Z\[]" /etc/neutron/neutron.conf
[DEFAULT]
auth_strategy = keystone
rpc_backend = rabbit
[keystone_authtoken]
auth_uri = http://192.168.56.11:5000
auth_url = http://192.168.56.11:35357
memcached_servers = 192.168.56.11:11211
auth_type = password
project_domain_name = default
user_domain_name = default
project_name = service
username = neutron
password = neutron
[oslo_concurrency]
lock_path = /var/lib/neutron/tmp
[oslo_messaging_rabbit]
rabbit_host = 192.168.56.11
rabbit_userid = openstack
rabbit_password = openstack



systemctl enable neutron-linuxbridge-agent.service 
systemctl start neutron-linuxbridge-agent.service

验证：
管理节点
neutron agent-list

创建网络
source admin-openstack.sh 
neutron net-create --shared --provider:physical_network public --provider:network_type flat public-net
openstack project list
neutron net-list
neutron subnet-create --name public-subnet --allocation-pool start=192.168.56.100,end=192.168.56.200 --dns-nameserver 223.5.5.5 --gateway 192.168.56.2 public-net 192.168.56.0/24
neutron subnet-list 
neutron net-list
创建方案
openstack flavor create --id 0 --vcpus 1 --ram 64 --disk 1 m1.nano
openstack flavor list
创建密钥
source demo-openstack.sh 
ssh-keygen -q -N ""
openstack keypair create --public-key ~/.ssh/id_rsa.pub mykey
openstack keypair list
设置安全组
openstack security group rule create --proto icmp default
openstack security group rule create --proto tcp --dst-port 22 default
创建虚机
source demo-openstack.sh 
openstack flavor list
openstack image list
openstack network list
openstack server create --flavor m1.nano --image cirros --nic net-id=58cb7984-a0e3-4bdd-adbb-5bab9eb89837 --security-group default --key-name mykey provider-instance
openstack server list

openstack console url show provider-instance


排错
openstack user list
openstack user delete id
openstack user create --domain default --password-prompt nova
openstack role add --project service --user nova admin

1.diff 配置文件
diff /etc/keystone/keystone.conf /tmp/control/keystone/keystone.conf
diff /etc/nova/nova.conf /tmp/control/nova/nova.conf 
diff /etc/glance/glance-api.conf /tmp/control/glance/glance-api.conf 
diff /etc/glance/glance-registry.conf /tmp/control/glance/glance-registry.conf 
diff /etc/neutron/neutron.conf /tmp/control/neutron/neutron.conf

2.nova service-list
neutron agent-list
nova image-list

3.清空日志，重新创建虚拟机，tail -f /var/log/nova/*  /var/log/neutron/*

dashboard:
yum install openstack-dashboard

vim /etc/openstack-dashboard/local_settings
30行 ALLOWED_HOSTS = ['*', ]

55 OPENSTACK_API_VERSIONS = {
56 #    "data-processing": 1.1,
57     "identity": 3,
58     "volume": 2,
59     "compute": 2,
60 }

64 OPENSTACK_KEYSTONE_MULTIDOMAIN_SUPPORT = True
72 OPENSTACK_KEYSTONE_DEFAULT_DOMAIN = 'default'

158 OPENSTACK_HOST = "192.168.56.11"
159 OPENSTACK_KEYSTONE_URL = "http://%s:5000/v3" % OPENSTACK_HOST
160 OPENSTACK_KEYSTONE_DEFAULT_ROLE = "user"

260 OPENSTACK_NEUTRON_NETWORK = {
261     'enable_router': False,
262     'enable_quotas': False,
263     'enable_ipv6': False,
264     'enable_distributed_router': False,
265     'enable_ha_router': False,
266     'enable_lb': False,
267     'enable_firewall': False,
268     'enable_vpn': False,
269     'enable_fip_topology_check': False,

370  TIME_ZONE = "Asia/Shanghai"

systemctl restart httpd

http://192.168.56.11/dashboard